rules:
  - id: interface_definition_location
    category: Interfaces
    description: All interfaces must be defined in internal/interfaces/ package
    examples:
      - "✅ Define new interfaces in internal/interfaces/tool.go"
      - "❌ Don't define interfaces in individual packages"
    file_globs:
      - "internal/interfaces/*.go"

  - id: pipeline_tool_structure
    category: Pipeline
    description: Tools must use the pipeline-based installation architecture
    examples:
      - "✅ Use InstallStrategy for installation steps"
      - "✅ Use VerifyStrategy for verification"
      - "❌ Don't implement direct installation logic"
    file_globs:
      - "internal/pipeline/*.go"

  - id: config_driven_tools
    category: Configuration
    description: New tools should be added via configuration files, not hardcoded
    examples:
      - "✅ Add new tool in config/tools/*.yaml"
      - "❌ Don't hardcode tool installation logic"
    file_globs:
      - "config/tools/*.yaml"

  - id: shell_config_structure
    category: Shell
    description: Shell configuration must use the ShellConfig structure
    examples:
      - "✅ Use ShellConfig for aliases, functions, and env vars"
      - "❌ Don't modify shell configuration directly"
    file_globs:
      - "internal/shell/*.go"

  - id: test_organization
    category: Testing
    description: Tests must follow the established organization pattern
    examples:
      - "✅ Unit tests alongside code (_test.go)"
      - "✅ Integration tests in test/integration/"
      - "✅ E2E tests in test/e2e/"
      - "✅ Test fixtures in test/fixtures/"
    file_globs:
      - "**/*_test.go"
      - "test/**/*.go" 